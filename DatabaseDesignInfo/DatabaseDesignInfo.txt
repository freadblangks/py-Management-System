
author：youhengchan@qq.com 

# 本文件用于说明数据库的表的设计，方便后期的二次开发


 目录：
【数据库结构快速预览】
【数据库：nuclear】
【表1：用户表】
【表2：用户任务表】
【表3：总任务表】
【表4：任务类型表】
【表5：公司表】



【数据库结构快速预览】
数据库：nuclear

表1：userstable
	| username | password | company |
表2：userjobstable
	| jobid | receivetime | endtime | jobtype | username | jobstatus | fileaddress |
表3：alljobstable
	| jobid | receivetime | endtime | jobtype | username | jobstatus | fileaddress |
表4：jobtypestable
	| jobtype | jobcode | jobdesc |
表5：companiestable
	| companyname |





【数据库：nuclear】

@说明：
@ 1 数据库名称为nucleardatabase
@ 2 数据库中以下几种类型的表：

     【表1：用户表】  存储所有用户信息，按照用户名Unicode排序

     【表2：用户任务表】 存储特定用户提交的任务及任务状态信息，按照时间顺序排序

     【表3：总任务表】存储系统开机以来的所有用户数据，不限用户，按照时间顺序排序

     【表4：任务类型表】用于存储所有任务类型，服务器程序开放接口可以动态修改这张表的信息，按照任务类型的Unicode排序
	
     【表5：公司表】用于存储所有的注册了的公司（单位），按照Unicode排序	


【表1：用户表】

表名：userstable

字段：

1.用户名

字段名：username

2.用户密码（使用密码学中强hash算法处理，储存hash结果，不存储明文，确保用户密码安全）

字段名： password

@ 用户表说明：
@ 1 支持远程注册，在客户端向服务器发送注册请求之后，服务器端将会在 【表1】 中存储用户信息
@ 2 每一个用户名作为一个独立的任务表，一旦用户注册成功，创建一张表2，表名为用户名

3. 公司名称

字段名：company

@ 公司名称 说明
@ 1 考虑到软件最终的客户单位会部署多套软件，注册多个用户，所以每一个用户注册的时候都应该能够选择其单位信息
@ 2 单位信息在服务器端提供了GUI接口进行添加、修改、删除单位信息（用户->单位信息）





【表2：用户任务表】

表名：userjobstable

字段：

1.流水号  （每个任务的唯一编号）

字段名：jobid

2.提交时间

字段名：receivetime

3.结束时间（若仍在处理，保持默认值无穷inf）

字段名：endtime

4.任务类型（varchar类型 便于后期自行添加细分类型）

字段名：jobtype

5.提交用户（对应单位）

字段名：username（同表名）

6.任务状态

字段名：jobstatus

7.文件路径

字段名：fileaddress

@ 文件路径 说明：
@ 1 如果从客户端传输到服务器的文件路径存在，直接调用服务器端本身存在的数据 
@ 2 否则接收客户端数据并将其保存到服务器本地，同时向数据库中写入保存的文件的路径



【表3：总任务表】

表名：alljobstable

@ 总任务表 说明：
@ 1 功能：存储系统开始工作以来的所有记录，不限提交用户
@ 2 格式：其内容与【表2：用户任务表】格式完全相同
@ 3 界面展示逻辑：在主界面仅仅展示最近的200条记录


【表4：任务类型表】

表名：jobtypestable

字段：

1. 任务类型

字段名： jobtype

2.任务代码

字段名：jobcode

3.功能说明

字段名：jobdesc


@ 任务类型表 GUI 接口 说明：
@ 1 支持在任务界面添加任务
@ 2 支持在任务界面修改已有任务
@ 3 支持在任务界面删除已有任务




【表5：单位表】

表名：companiestable

字段：

1.公司名称

字段名：companyname





